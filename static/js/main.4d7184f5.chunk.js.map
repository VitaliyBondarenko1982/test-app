{"version":3,"sources":["redux/reducer.ts","redux/store.ts","redux/actionTypes.ts","commponents/NavBar/NavBar.tsx","commponents/UI/Input/Input.tsx","commponents/UI/Button/Button.tsx","commponents/Form/Form.tsx","redux/actions.ts","commponents/EditUser/EditUser.tsx","Layout/Layout.tsx","commponents/CreateUser/CreateUser.tsx","commponents/User/User.tsx","commponents/UI/Loader/Loader.tsx","commponents/Users/Users.tsx","App.tsx","index.tsx"],"names":["initialState","users","loading","editing","newUser","name","surname","desc","editUser","id","store","createStore","state","action","type","value","user","map","composeWithDevTools","applyMiddleware","thunk","NavBar","className","to","Input","label","placeholder","onChange","isValid","htmlFor","cx","hidden","Button","onClick","children","Form","onClickHandler","onChangeHandler","title","buttonText","useState","nameIsValid","setNameIsValid","surnameIsValid","setSurnameIsValid","descIsValid","setDescIsValid","event","preventDefault","length","setInterval","loadUsersSuccess","setNewUser","finishEditing","setEditingUser","setEditingUserId","mapDispatchToProps","setEditingUserAction","setEditedUser","dispatch","getState","a","axios","put","response","data","console","log","setEditingUserIdAction","EditUser","connect","useEffect","target","nameControl","finishEditingAction","Layout","role","tabIndex","setNewUserAction","postNewUser","post","CreateUser","history","useHistory","setTimeout","push","deleteUser","delete","startEditing","User","Loader","loadUsers","get","Users","currentPage","setCurrentage","pages","amountOfPages","Math","ceil","i","visibleUsers","slice","key","href","page","uuidv4","onPageClick","App","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d7184f5.chunk.js","sourcesContent":["import { AnyAction } from 'redux';\nimport {\n  CREATE_NEW_USER, FINISH_EDITING,\n  LOAD_USERS_SUCCESS,\n  SET_EDITING_USER,\n  SET_EDITING_USER_ID,\n  SET_NEW_USER,\n  START_EDITING,\n  START_LOADING, UPDATE_EDITED_USER,\n} from './actionTypes';\nimport { UserI } from '../utils/interfaces';\n\nconst initialState = {\n  users: [],\n  loading: false,\n  editing: false,\n  newUser: {\n    name: '',\n    surname: '',\n    desc: '',\n  },\n  editUser: {\n    id: 0,\n    name: '',\n    surname: '',\n    desc: '',\n  },\n};\n\nexport const reducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case LOAD_USERS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.users,\n      };\n    case START_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case START_EDITING:\n      return {\n        ...state,\n        editing: true,\n      };\n    case FINISH_EDITING:\n      return {\n        ...state,\n        editing: false,\n      };\n    case SET_NEW_USER:\n      return {\n        ...state,\n        newUser: {\n          ...state.newUser,\n          [action.name]: action.value,\n        },\n      };\n    case CREATE_NEW_USER:\n      return {\n        ...state,\n        users: [...state.users, action.user],\n        loading: false,\n      };\n    case SET_EDITING_USER:\n      return {\n        ...state,\n        editUser: {\n          ...state.editUser,\n          [action.name]: action.value,\n        },\n      };\n    case SET_EDITING_USER_ID:\n      return {\n        ...state,\n        editUser: {\n          ...state.editUser,\n          id: action.id,\n        },\n      };\n    case UPDATE_EDITED_USER:\n      return {\n        ...state,\n        users: state.users.map((user: UserI) => {\n          return user.id === action.user.id ? {\n            ...action.user,\n          } : {\n            ...user,\n          };\n        }),\n      };\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { reducer } from './reducer';\n\nexport const store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n","export const LOAD_USERS_SUCCESS = 'LOAD_USERS_SUCCESS';\nexport const LOAD_USERS_ERROR = 'LOAD_USERS_ERROR';\nexport const START_LOADING = 'START_LOADING';\nexport const SET_NEW_USER = 'SET_NEW_USER';\nexport const CREATE_NEW_USER = 'CREATE_NEW_USER';\nexport const START_EDITING = 'START_EDITING';\nexport const FINISH_EDITING = 'FINISH_EDITING';\nexport const UPDATE_EDITED_USER = 'UPDATE_EDITED_USER';\nexport const SET_EDITING_USER = 'SET_EDITING_USER';\nexport const SET_EDITING_USER_ID = 'SET_EDITING_USER_ID';\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './_NavBar.scss';\n\nexport const NavBar = () => {\n  return (\n    <nav>\n      <div className=\"nav-wrapper\">\n        <NavLink to=\"/\" className=\"brand-logo\">Merehead</NavLink>\n        <ul id=\"nav-mobile\" className=\"right\">\n          <li><NavLink to=\"/\">Users</NavLink></li>\n          <li><NavLink to=\"/create-user\">Create user</NavLink></li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n","import React, { ChangeEvent, FC } from 'react';\nimport cx from 'classnames';\n\ninterface Props {\n  label: string;\n  id: string;\n  name: string;\n  placeholder: string;\n  onChange: (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => void;\n  value: string;\n  isValid: boolean;\n}\nexport const Input: FC<Props> = ({\n  label,\n  id,\n  name,\n  placeholder,\n  onChange,\n  value,\n  isValid,\n}) => {\n  return (\n    <div className=\"input-field\">\n      <input\n        type=\"text\"\n        name={name}\n        placeholder={placeholder}\n        className=\"yellow-input\"\n        id={id}\n        onChange={onChange}\n        value={value}\n      />\n      <label htmlFor={id}>{label}</label>\n      <span className={cx('helper-text', { hidden: isValid })}>{`Field ${name} is required`}</span>\n    </div>\n  );\n};\n","import React, { FC, FormEvent } from 'react';\n\ninterface Props {\n  onClick: (event: FormEvent) => void;\n  className: string;\n}\nexport const Button: FC<Props> = ({\n  onClick,\n  className,\n  children,\n}) => {\n  return (\n    <button\n      type=\"button\"\n      className={className}\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  );\n};\n","import React, {\n  ChangeEvent, FC, FormEvent, useState,\n} from 'react';\nimport cx from 'classnames';\nimport { Input } from '../UI/Input';\nimport { UserI, NewUser } from '../../utils/interfaces';\nimport './_Form.scss';\nimport { Button } from '../UI/Button';\n\ninterface Props {\n  newUser: UserI | NewUser;\n  onClickHandler: () => void;\n  onChangeHandler: (event: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void;\n  title: string;\n  buttonText: string;\n}\n\nexport const Form: FC<Props> = ({\n  newUser,\n  onClickHandler,\n  onChangeHandler,\n  title,\n  buttonText,\n}) => {\n  const [nameIsValid, setNameIsValid] = useState(true);\n  const [surnameIsValid, setSurnameIsValid] = useState(true);\n  const [descIsValid, setDescIsValid] = useState(true);\n\n  const onClickWithValidation = (event: FormEvent) => {\n    event.preventDefault();\n\n    if (!newUser.name.length) {\n      setNameIsValid(false);\n\n      setInterval(() => {\n        setNameIsValid(true);\n      }, 2000);\n\n      return;\n    }\n\n    if (!newUser.surname.length) {\n      setSurnameIsValid(false);\n\n      setInterval(() => {\n        setSurnameIsValid(true);\n      }, 2000);\n\n      return;\n    }\n\n    if (!newUser.desc.length) {\n      setDescIsValid(false);\n\n      setInterval(() => {\n        setDescIsValid(true);\n      }, 2000);\n\n      return;\n    }\n\n    onClickHandler();\n  };\n\n  return (\n    <form className=\"col s6 offset-s3\">\n      <h2>{title}</h2>\n      <div className=\"card blue darken-1\">\n        <div className=\"card-content white-text\">\n          <div>\n            <Input\n              label=\"Name\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter name\"\n              value={newUser.name}\n              onChange={onChangeHandler}\n              isValid={nameIsValid}\n            />\n            <Input\n              label=\"Surname\"\n              id=\"surname\"\n              name=\"surname\"\n              placeholder=\"Enter surname\"\n              value={newUser.surname}\n              onChange={onChangeHandler}\n              isValid={surnameIsValid}\n            />\n            <div className=\"input-field\">\n              <textarea\n                id=\"desc\"\n                name=\"desc\"\n                placeholder=\"Enter description\"\n                className=\"yellow-input materialize-textarea\"\n                value={newUser.desc}\n                onChange={onChangeHandler}\n              />\n              <label htmlFor=\"desc\">Description</label>\n              <span className={cx('helper-text', { hidden: descIsValid })}>Field description is required</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"card-action\">\n          <Button\n            onClick={onClickWithValidation}\n            className=\"btn yellow darken-4\"\n          >\n            {buttonText}\n          </Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { Dispatch } from 'redux';\nimport axios from 'axios';\nimport {\n  FINISH_EDITING,\n  LOAD_USERS_SUCCESS,\n  SET_NEW_USER,\n  START_EDITING,\n  START_LOADING,\n  SET_EDITING_USER_ID,\n  SET_EDITING_USER,\n  UPDATE_EDITED_USER, CREATE_NEW_USER,\n} from './actionTypes';\nimport { State, UserI } from '../utils/interfaces';\n\nexport const startLoading = () => ({\n  type: START_LOADING,\n});\n\nexport const loadUsersSuccess = (users: UserI[]) => ({\n  type: LOAD_USERS_SUCCESS,\n  users,\n});\n\nexport const createNewUser = (user: UserI) => ({\n  type: CREATE_NEW_USER,\n  user,\n});\n\nexport const setNewUser = (value: string, name: string) => ({\n  type: SET_NEW_USER,\n  value,\n  name,\n});\n\nexport const startEditing = () => ({\n  type: START_EDITING,\n});\n\nexport const finishEditing = () => ({\n  type: FINISH_EDITING,\n});\n\nexport const setEditingUser = (value: string, name: string) => ({\n  type: SET_EDITING_USER,\n  value,\n  name,\n});\n\nexport const setEditingUserId = (id: number) => ({\n  type: SET_EDITING_USER_ID,\n  id,\n});\n\nexport const updateEditedUser = (user: UserI) => ({\n  type: UPDATE_EDITED_USER,\n  user,\n});\n\nexport const loadUsers = () => {\n  return async (dispatch: Dispatch) => {\n    dispatch(startLoading());\n    try {\n      const response = await axios.get('http://77.120.241.80:8911/api/users');\n      const { data } = response;\n\n      dispatch(loadUsersSuccess(data));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const postNewUser = () => {\n  return async (dispatch: Dispatch, getState: () => State) => {\n    const { newUser } = getState();\n\n    dispatch(startLoading());\n\n    try {\n      const response = await axios.post('http://77.120.241.80:8911/api/users', newUser);\n\n      dispatch(createNewUser(response.data));\n      dispatch(setNewUser('', 'name'));\n      dispatch(setNewUser('', 'surname'));\n      dispatch(setNewUser('', 'desc'));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const deleteUser = (id: number) => {\n  return async (dispatch: Dispatch) => {\n    try {\n      const response = await axios.delete(`http://77.120.241.80:8911/api/user/${id}`);\n\n      dispatch(loadUsersSuccess(response.data));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n\nexport const setEditedUser = (id: number) => {\n  return async (dispatch: Dispatch, getState: () => State) => {\n    const { editUser } = getState();\n\n    dispatch(startLoading());\n\n    try {\n      const response = await axios.put(`http://77.120.241.80:8911/api/user/${id}`, {\n        name: editUser.name,\n        surname: editUser.surname,\n        desc: editUser.desc,\n      });\n\n      dispatch(updateEditedUser(response.data));\n      dispatch(finishEditing());\n      dispatch(setEditingUser('', 'name'));\n      dispatch(setEditingUser('', 'surname'));\n      dispatch(setEditingUser('', 'desc'));\n      dispatch(setEditingUserId(0));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n};\n","import React, {\n  ChangeEvent, FC, useEffect,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from '../Form';\nimport { State, UserI } from '../../utils/interfaces';\nimport {\n  setEditingUser as setEditingUserAction,\n  setEditedUser as setEditedUserAction,\n  setEditingUserId as setEditingUserIdAction,\n} from '../../redux/actions';\nimport './_EditUser.scss';\n\ninterface StateProps {\n  editUser: UserI;\n}\n\ninterface DispatchProps {\n  setEditingUser: (value: string, name: string) => void;\n  setEditedUser: (id: number) => void;\n  setEditingUserId: (id: number) => void;\n}\n\ntype TotalProps = StateProps & DispatchProps;\n\nconst EditUserTemplate: FC<TotalProps> = ({\n  editUser,\n  setEditingUser,\n  setEditedUser,\n  setEditingUserId,\n}) => {\n  useEffect(() => {\n    return () => {\n      setEditingUser('', 'name');\n      setEditingUser('', 'surname');\n      setEditingUser('', 'desc');\n      setEditingUserId(0);\n    };\n  }, []);\n  const onClickHandler = () => {\n    setEditedUser(editUser.id);\n  };\n\n  const onChangeHandler = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { value, name: nameControl } = event.target;\n\n    switch (nameControl) {\n      case 'name':\n        setEditingUser(value, nameControl);\n        break;\n      case 'surname':\n        setEditingUser(value, nameControl);\n        break;\n      case 'desc':\n        setEditingUser(value, nameControl);\n        break;\n      default:\n    }\n  };\n\n  return (\n    <div\n      className=\"row edit-user\"\n    >\n      <Form\n        newUser={editUser}\n        onClickHandler={onClickHandler}\n        onChangeHandler={onChangeHandler}\n        title=\"Edit user\"\n        buttonText=\"Save user\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  editUser: state.editUser,\n});\n\nconst mapDispatchToProps = {\n  setEditingUser: setEditingUserAction,\n  setEditedUser: setEditedUserAction,\n  setEditingUserId: setEditingUserIdAction,\n};\n\nexport const EditUser = connect(mapStateToProps, mapDispatchToProps)(EditUserTemplate);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport { NavBar } from '../commponents/NavBar';\nimport { State } from '../utils/interfaces';\nimport { EditUser } from '../commponents/EditUser';\nimport { finishEditing as finishEditingAction } from '../redux/actions';\nimport './_Layout.scss';\n\ninterface StateProps {\n  editing: boolean;\n}\n\ninterface DispatchProps {\n  finishEditing: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst LayoutTemplate: FC<Props> = ({\n  children,\n  editing,\n  finishEditing,\n}) => {\n  const onClickHandler = () => {\n    finishEditing();\n  };\n\n  return (\n    <div className=\"layout\">\n      <NavBar />\n      <div className=\"main\">\n        {children}\n        {editing ? <EditUser /> : null}\n        {editing\n          ? (\n            <div\n              className=\"overlay\"\n              role=\"menu\"\n              tabIndex={0}\n              onClick={onClickHandler}\n            />\n          ) : null}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  editing: state.editing,\n});\n\nconst mapDispatchToProps = {\n  finishEditing: finishEditingAction,\n};\n\nexport const Layout = connect(mapStateToProps, mapDispatchToProps)(LayoutTemplate);\n","import React, {\n  FC, ChangeEvent, useEffect,\n} from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { State, NewUser } from '../../utils/interfaces';\nimport {\n  setNewUser as setNewUserAction,\n  postNewUser as postNewUserAction,\n} from '../../redux/actions';\nimport { Form } from '../Form';\n\ninterface StateProps {\n  newUser: NewUser;\n}\n\ninterface DispatchProps {\n  setNewUser: (value: string, name: string) => void;\n  postNewUser: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nexport const CreateUserTemplate: FC<Props> = ({\n  setNewUser,\n  newUser,\n  postNewUser,\n}) => {\n  const history = useHistory();\n\n  useEffect(() => {\n    return () => {\n      setNewUser('', 'name');\n      setNewUser('', 'surname');\n      setNewUser('', 'desc');\n    };\n  }, [setNewUser]);\n\n  const onChangeHandler = (event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n    const { value, name: nameControl } = event.target;\n\n    switch (nameControl) {\n      case 'name':\n        setNewUser(value, nameControl);\n        break;\n      case 'surname':\n        setNewUser(value, nameControl);\n        break;\n      case 'desc':\n        setNewUser(value, nameControl);\n        break;\n      default:\n    }\n  };\n\n  const onClickHandler = () => {\n    postNewUser();\n    setTimeout(() => {\n      history.push('/');\n    }, 500);\n  };\n\n  return (\n    <div className=\"row\">\n      <Form\n        newUser={newUser}\n        onClickHandler={onClickHandler}\n        onChangeHandler={onChangeHandler}\n        title=\"Create new user\"\n        buttonText=\"Create user\"\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  newUser: state.newUser,\n});\n\nconst mapDispatchToProps = {\n  setNewUser: setNewUserAction,\n  postNewUser: postNewUserAction,\n};\n\nexport const CreateUser = connect(mapStateToProps, mapDispatchToProps)(CreateUserTemplate);\n","import React, { FC } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  deleteUser as deleteUserAction,\n  setEditingUser as setEditingUserAction,\n  setEditingUserId as setEditingUserIdAction,\n  startEditing as startEditingAction,\n} from '../../redux/actions';\nimport { State } from '../../utils/interfaces';\nimport { Button } from '../UI/Button';\n\ninterface Props {\n  id: number;\n  name: string;\n  surname: string;\n  desc: string;\n}\n\ninterface StateProps {\n  editing: boolean;\n}\n\ninterface DispatchProps {\n  deleteUser: (id: number) => void;\n  startEditing: () => void;\n  setEditingUser: (value: string, name: string) => void;\n  setEditingUserId: (id: number) => void;\n}\n\nconst UserTemplate: FC<Props & DispatchProps & StateProps> = ({\n  name,\n  surname,\n  desc,\n  id,\n  deleteUser,\n  startEditing,\n  setEditingUser,\n  setEditingUserId,\n}) => {\n  const onRemoveClickHandler = () => {\n    deleteUser(id);\n  };\n\n  const onEditClickHandler = () => {\n    startEditing();\n    setEditingUserId(id);\n    setEditingUser(name, 'name');\n    setEditingUser(surname, 'surname');\n    setEditingUser(desc, 'desc');\n  };\n\n  return (\n    <div className=\"col s12 m4\">\n      <div className=\"card blue-grey darken-1\">\n        <div className=\"card-content white-text\">\n          <span className=\"card-title\">{name}</span>\n          <span className=\"card-title\">{surname}</span>\n          <p>\n            {desc}\n          </p>\n        </div>\n        <div className=\"card-action\">\n          <Button\n            onClick={onEditClickHandler}\n            className=\"btn grey lighten-1 black-text\"\n          >\n            Edit\n          </Button>\n          <Button\n            onClick={onRemoveClickHandler}\n            className=\"btn yellow darken-4\"\n          >\n            Delete\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  editing: state.editing,\n});\n\nconst mapDispatchToProps = {\n  deleteUser: deleteUserAction,\n  startEditing: startEditingAction,\n  setEditingUser: setEditingUserAction,\n  setEditingUserId: setEditingUserIdAction,\n};\n\nexport const User = connect(mapStateToProps, mapDispatchToProps)(UserTemplate);\n","import React from 'react';\nimport './_Loader.scss';\n\nexport const Loader = () => {\n  return (\n    <div className=\"loader__wrapper\">\n      <div className=\"loader\">\n        <div />\n        <div />\n      </div>\n    </div>\n  );\n};\n","import React, {\n  FC, useEffect, useState,\n} from 'react';\nimport { connect } from 'react-redux';\nimport cx from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { User } from '../User';\nimport { loadUsers as loadUsersAction } from '../../redux/actions';\nimport { State, UserI } from '../../utils/interfaces';\nimport './_Users.scss';\nimport { Loader } from '../UI/Loader';\n\ninterface StateProps {\n  users: UserI[];\n  loading: boolean;\n}\n\ninterface DispatchProps {\n  loadUsers: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst UsersTemplate: FC<Props> = ({\n  loadUsers,\n  users,\n  loading,\n}) => {\n  const [currentPage, setCurrentage] = useState(1);\n\n  useEffect(() => {\n    loadUsers();\n  }, [loadUsers]);\n\n  const pages = [];\n  const amountOfPages = Math.ceil(users.length / 5);\n  const amountOnPage = 5;\n\n  for (let i = 1; i <= amountOfPages; i += 1) {\n    pages.push(i);\n  }\n\n  const visibleUsers = users.slice((currentPage - 1) * amountOnPage, currentPage * amountOnPage);\n\n  const onNextPageClick = () => {\n    if (currentPage === amountOfPages) {\n      return;\n    }\n\n    setCurrentage(currentPage + 1);\n  };\n\n  const onPrevPageClick = () => {\n    if (currentPage === 1) {\n      return;\n    }\n\n    setCurrentage(currentPage - 1);\n  };\n\n  const onPageClick = (page: number) => {\n    setCurrentage(page);\n  };\n\n  return (\n    <>\n      { loading ? <Loader /> : null}\n      <div className=\"row users\">\n        {visibleUsers.map((user) => {\n          return (\n            <User\n              key={user.id}\n              id={user.id}\n              name={user.name}\n              surname={user.surname}\n              desc={user.desc}\n            />\n          );\n        })}\n      </div>\n      <ul className=\"pagination\">\n        <li\n          className={cx(currentPage === 1 ? 'disabled' : 'waves-effect')}\n          onClick={onPrevPageClick}\n        >\n          <a href=\"#!\"><i className=\"material-icons\">chevron_left</i></a>\n        </li>\n        {pages.map(page => {\n          return (\n            <li\n              className={cx(currentPage === page ? 'active' : 'waves-effect')}\n              key={uuidv4()}\n              onClick={() => onPageClick(page)}\n            >\n              <a\n                href=\"#!\"\n              >\n                {page}\n              </a>\n            </li>\n          );\n        })}\n        <li\n          className={cx(currentPage === amountOfPages ? 'disabled' : 'waves-effect')}\n          onClick={onNextPageClick}\n        >\n          <a href=\"#!\"><i className=\"material-icons\">chevron_right</i></a>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: State) => ({\n  users: state.users,\n  loading: state.loading,\n});\n\nconst mapDispatchToProps = {\n  loadUsers: loadUsersAction,\n};\n\nexport const Users = connect(mapStateToProps, mapDispatchToProps)(UsersTemplate);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Layout } from './Layout';\nimport { CreateUser } from './commponents/CreateUser';\nimport { Users } from './commponents/Users';\nimport 'materialize-css';\nimport './_App.scss';\n\nconst App = () => (\n  <div className=\"app\">\n    <Layout>\n      <Switch>\n        <Route path=\"/\" component={Users} exact />\n        {/* <Route path=\"/user/:id\" component={UserPage} /> */}\n        <Route path=\"/create-user\" component={CreateUser} />\n      </Switch>\n    </Layout>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { store } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}